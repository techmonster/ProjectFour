import java.io.File;import java.io.FileNotFoundException;import java.util.Scanner;/**   A driver that demonstrates the class Infix and Postfix.      @author Frank M. Carrano   @author Timothy M. Henry   @version 4.1*/public class Driver{	public static void main(String[] args) throws FileNotFoundException {		File text = new File("p4in.txt");		CreateFile aFile = new CreateFile();		aFile.openFile("p4out.txt");		Scanner scnr = new Scanner(text);		String s = String.format("%-40s%-30s%-30s%s", "Input", "Infix", "Postfix", "Result\n");		String s2 = String.format("%65s%59s%8s%59s%8s", "Symbol Table\n", "Variable", "Value\n", "--------", "--------\n");		String s3 = String.format("%56s%9s%56s%9s%56s%9s%56s%9s%56s%9s%56s%9s%56s%9s%56s%9s"				, "a", "2\n", "b", "3\n", "c", "4\n", "d", "5\n", "e", "6\n", "f", "0\n", "g", "1\n", "h", "8\n");		System.out.println(s2 + "\n" + s3);		aFile.addRecords(s2);		aFile.addRecords(s3);		aFile.addRecords(s);		System.out.println(s);		while (scnr.hasNextLine()) {			String line = scnr.nextLine();			testPostfix(line, aFile);		}		aFile.closeFile();	}		public static void testPostfix(String input, CreateFile aFile)	{		String infixExpression = Postfix.convertToInfix(input);		String postfixExpression =  Postfix.convertToPostfix(infixExpression);		double result = Postfix.evaluatePostfix(postfixExpression);		String record = String.format("%-40s%-30s%-30s%s\n",input,infixExpression,postfixExpression,result);		aFile.addRecords(record);		System.out.println(record);		System.out.println("\n");	} // end testPostfix}  // end Driver